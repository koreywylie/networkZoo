# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'zoo_MainWin.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1366, 867)
        MainWindow.setMinimumSize(QtCore.QSize(160, 90))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(1000, 800))
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalFrame_controls = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.verticalFrame_controls.sizePolicy().hasHeightForWidth())
        self.verticalFrame_controls.setSizePolicy(sizePolicy)
        self.verticalFrame_controls.setMinimumSize(QtCore.QSize(500, 800))
        self.verticalFrame_controls.setStyleSheet("")
        self.verticalFrame_controls.setObjectName("verticalFrame_controls")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalFrame_controls)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.listWidget_ICNtemplates = QtWidgets.QListWidget(self.verticalFrame_controls)
        self.listWidget_ICNtemplates.setObjectName("listWidget_ICNtemplates")
        self.gridLayout_5.addWidget(self.listWidget_ICNtemplates, 4, 4, 1, 1)
        self.pushButton_icnload = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_icnload.setObjectName("pushButton_icnload")
        self.gridLayout_5.addWidget(self.pushButton_icnload, 3, 4, 1, 1)
        self.pushButton_icaload = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_icaload.setObjectName("pushButton_icaload")
        self.gridLayout_5.addWidget(self.pushButton_icaload, 3, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.verticalFrame_controls)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_5.addWidget(self.label_6, 2, 4, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.verticalFrame_controls)
        self.label_5.setObjectName("label_5")
        self.gridLayout_5.addWidget(self.label_5, 4, 2, 1, 1)
        self.listWidget_ICAComponents = QtWidgets.QListWidget(self.verticalFrame_controls)
        self.listWidget_ICAComponents.setObjectName("listWidget_ICAComponents")
        self.gridLayout_5.addWidget(self.listWidget_ICAComponents, 4, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.verticalFrame_controls)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_5.addWidget(self.label_4, 2, 0, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout_5)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_runAnalysis = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_runAnalysis.setEnabled(True)
        self.pushButton_runAnalysis.setObjectName("pushButton_runAnalysis")
        self.horizontalLayout.addWidget(self.pushButton_runAnalysis)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.label_9 = QtWidgets.QLabel(self.verticalFrame_controls)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.verticalLayout_2.addWidget(self.label_9)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lineEdit_ICANetwork = QtWidgets.QLineEdit(self.verticalFrame_controls)
        self.lineEdit_ICANetwork.setObjectName("lineEdit_ICANetwork")
        self.horizontalLayout_2.addWidget(self.lineEdit_ICANetwork)
        self.label_8 = QtWidgets.QLabel(self.verticalFrame_controls)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_2.addWidget(self.label_8)
        self.lineEdit_mappedICANetwork = QtWidgets.QLineEdit(self.verticalFrame_controls)
        self.lineEdit_mappedICANetwork.setObjectName("lineEdit_mappedICANetwork")
        self.horizontalLayout_2.addWidget(self.lineEdit_mappedICANetwork)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.pushButton_addNetwork = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_addNetwork.setObjectName("pushButton_addNetwork")
        self.horizontalLayout_8.addWidget(self.pushButton_addNetwork)
        self.pushButton_rmNetwork = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_rmNetwork.setObjectName("pushButton_rmNetwork")
        self.horizontalLayout_8.addWidget(self.pushButton_rmNetwork)
        self.verticalLayout_2.addLayout(self.horizontalLayout_8)
        self.listWidget_mappedICANetworks = QtWidgets.QListWidget(self.verticalFrame_controls)
        self.listWidget_mappedICANetworks.setObjectName("listWidget_mappedICANetworks")
        self.verticalLayout_2.addWidget(self.listWidget_mappedICANetworks)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.pushButton_createOutput = QtWidgets.QPushButton(self.verticalFrame_controls)
        self.pushButton_createOutput.setEnabled(True)
        self.pushButton_createOutput.setObjectName("pushButton_createOutput")
        self.horizontalLayout_7.addWidget(self.pushButton_createOutput)
        self.verticalLayout_2.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_3.addWidget(self.verticalFrame_controls)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(9)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 840, 805))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.slice_frame = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(9)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.slice_frame.sizePolicy().hasHeightForWidth())
        self.slice_frame.setSizePolicy(sizePolicy)
        self.slice_frame.setStyleSheet("")
        self.slice_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.slice_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.slice_frame.setObjectName("slice_frame")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.slice_frame)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBox_2 = QtWidgets.QGroupBox(self.slice_frame)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton_ortho = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_ortho.setChecked(True)
        self.radioButton_ortho.setObjectName("radioButton_ortho")
        self.buttonGroup_xview = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup_xview.setObjectName("buttonGroup_xview")
        self.buttonGroup_xview.addButton(self.radioButton_ortho)
        self.verticalLayout.addWidget(self.radioButton_ortho)
        self.radioButton_axial = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_axial.setEnabled(True)
        self.radioButton_axial.setObjectName("radioButton_axial")
        self.buttonGroup_xview.addButton(self.radioButton_axial)
        self.verticalLayout.addWidget(self.radioButton_axial)
        self.radioButton_sagittal = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_sagittal.setEnabled(True)
        self.radioButton_sagittal.setObjectName("radioButton_sagittal")
        self.buttonGroup_xview.addButton(self.radioButton_sagittal)
        self.verticalLayout.addWidget(self.radioButton_sagittal)
        self.radioButton_coronal = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_coronal.setEnabled(True)
        self.radioButton_coronal.setObjectName("radioButton_coronal")
        self.buttonGroup_xview.addButton(self.radioButton_coronal)
        self.verticalLayout.addWidget(self.radioButton_coronal)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(125, 0))
        self.label.setMaximumSize(QtCore.QSize(125, 16777215))
        self.label.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.horizontalLayout_14.addWidget(self.label)
        self.spinBox_numSlices = QtWidgets.QSpinBox(self.groupBox_2)
        self.spinBox_numSlices.setMinimumSize(QtCore.QSize(70, 0))
        self.spinBox_numSlices.setMaximumSize(QtCore.QSize(70, 16777215))
        self.spinBox_numSlices.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBox_numSlices.setProperty("value", 5)
        self.spinBox_numSlices.setObjectName("spinBox_numSlices")
        self.horizontalLayout_14.addWidget(self.spinBox_numSlices)
        self.verticalLayout.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_4.addLayout(self.verticalLayout)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pushButton_showOverlap = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_showOverlap.setEnabled(True)
        self.pushButton_showOverlap.setMinimumSize(QtCore.QSize(200, 0))
        self.pushButton_showOverlap.setMaximumSize(QtCore.QSize(200, 16777215))
        self.pushButton_showOverlap.setObjectName("pushButton_showOverlap")
        self.verticalLayout_4.addWidget(self.pushButton_showOverlap)
        self.frame = QtWidgets.QFrame(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setMaximumSize(QtCore.QSize(16777215, 75))
        self.frame.setObjectName("frame")
        self.horizontalLayout_xcontrols = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_xcontrols.setObjectName("horizontalLayout_xcontrols")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalSlider_Xslice = QtWidgets.QSlider(self.frame)
        self.horizontalSlider_Xslice.setMinimum(-78)
        self.horizontalSlider_Xslice.setMaximum(78)
        self.horizontalSlider_Xslice.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_Xslice.setObjectName("horizontalSlider_Xslice")
        self.verticalLayout_6.addWidget(self.horizontalSlider_Xslice)
        self.label_Xslice = QtWidgets.QLabel(self.frame)
        self.label_Xslice.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Xslice.setObjectName("label_Xslice")
        self.verticalLayout_6.addWidget(self.label_Xslice)
        self.horizontalLayout_xcontrols.addLayout(self.verticalLayout_6)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalSlider_Yslice = QtWidgets.QSlider(self.frame)
        self.horizontalSlider_Yslice.setMinimum(-112)
        self.horizontalSlider_Yslice.setMaximum(76)
        self.horizontalSlider_Yslice.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_Yslice.setObjectName("horizontalSlider_Yslice")
        self.verticalLayout_7.addWidget(self.horizontalSlider_Yslice)
        self.label_Yslice = QtWidgets.QLabel(self.frame)
        self.label_Yslice.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Yslice.setObjectName("label_Yslice")
        self.verticalLayout_7.addWidget(self.label_Yslice)
        self.horizontalLayout_xcontrols.addLayout(self.verticalLayout_7)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.horizontalSlider_Zslice = QtWidgets.QSlider(self.frame)
        self.horizontalSlider_Zslice.setMinimum(-70)
        self.horizontalSlider_Zslice.setMaximum(85)
        self.horizontalSlider_Zslice.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_Zslice.setObjectName("horizontalSlider_Zslice")
        self.verticalLayout_8.addWidget(self.horizontalSlider_Zslice)
        self.label_Zslice = QtWidgets.QLabel(self.frame)
        self.label_Zslice.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Zslice.setObjectName("label_Zslice")
        self.verticalLayout_8.addWidget(self.label_Zslice)
        self.horizontalLayout_xcontrols.addLayout(self.verticalLayout_8)
        self.verticalLayout_4.addWidget(self.frame)
        self.horizontalLayout_4.addLayout(self.verticalLayout_4)
        self.verticalLayout_3.addWidget(self.groupBox_2)
        self.frame_plot = QtWidgets.QFrame(self.slice_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(9)
        sizePolicy.setHeightForWidth(self.frame_plot.sizePolicy().hasHeightForWidth())
        self.frame_plot.setSizePolicy(sizePolicy)
        self.frame_plot.setMinimumSize(QtCore.QSize(400, 400))
        self.frame_plot.setObjectName("frame_plot")
        self.verticalLayout_xplot = QtWidgets.QVBoxLayout(self.frame_plot)
        self.verticalLayout_xplot.setObjectName("verticalLayout_xplot")
        self.verticalLayout_plot = QtWidgets.QVBoxLayout()
        self.verticalLayout_plot.setObjectName("verticalLayout_plot")
        self.verticalLayout_xplot.addLayout(self.verticalLayout_plot)
        self.verticalLayout_3.addWidget(self.frame_plot)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_3.addLayout(self.gridLayout)
        self.verticalLayout_5.addWidget(self.slice_frame)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.horizontalLayout_3.addWidget(self.scrollArea)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1366, 20))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuDisplay = QtWidgets.QMenu(self.menubar)
        self.menuDisplay.setObjectName("menuDisplay")
        self.menuMasks = QtWidgets.QMenu(self.menubar)
        self.menuMasks.setObjectName("menuMasks")
        self.menuNetworks = QtWidgets.QMenu(self.menubar)
        self.menuNetworks.setObjectName("menuNetworks")
        self.menuMappings_2 = QtWidgets.QMenu(self.menubar)
        self.menuMappings_2.setObjectName("menuMappings_2")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_LoadICAcomps = QtWidgets.QAction(MainWindow)
        self.action_LoadICAcomps.setObjectName("action_LoadICAcomps")
        self.action_ClearICAlist_all = QtWidgets.QAction(MainWindow)
        self.action_ClearICAlist_all.setEnabled(True)
        self.action_ClearICAlist_all.setObjectName("action_ClearICAlist_all")
        self.action_LoadICNtemplates = QtWidgets.QAction(MainWindow)
        self.action_LoadICNtemplates.setEnabled(True)
        self.action_LoadICNtemplates.setObjectName("action_LoadICNtemplates")
        self.action_LoadNoisetemplates = QtWidgets.QAction(MainWindow)
        self.action_LoadNoisetemplates.setEnabled(True)
        self.action_LoadNoisetemplates.setObjectName("action_LoadNoisetemplates")
        self.action_ClearICNlist_all = QtWidgets.QAction(MainWindow)
        self.action_ClearICNlist_all.setEnabled(True)
        self.action_ClearICNlist_all.setObjectName("action_ClearICNlist_all")
        self.action_Quit = QtWidgets.QAction(MainWindow)
        self.action_Quit.setEnabled(True)
        self.action_Quit.setObjectName("action_Quit")
        self.action_DisplayICAtime = QtWidgets.QAction(MainWindow)
        self.action_DisplayICAtime.setCheckable(True)
        self.action_DisplayICAtime.setChecked(True)
        self.action_DisplayICAtime.setEnabled(True)
        self.action_DisplayICAtime.setObjectName("action_DisplayICAtime")
        self.action_DisplayICAfreq = QtWidgets.QAction(MainWindow)
        self.action_DisplayICAfreq.setCheckable(True)
        self.action_DisplayICAfreq.setChecked(True)
        self.action_DisplayICAfreq.setEnabled(True)
        self.action_DisplayICAfreq.setObjectName("action_DisplayICAfreq")
        self.action_ChangeTR = QtWidgets.QAction(MainWindow)
        self.action_ChangeTR.setObjectName("action_ChangeTR")
        self.action_LoadAnalysis = QtWidgets.QAction(MainWindow)
        self.action_LoadAnalysis.setObjectName("action_LoadAnalysis")
        self.action_SaveAnalysis = QtWidgets.QAction(MainWindow)
        self.action_SaveAnalysis.setObjectName("action_SaveAnalysis")
        self.action_LoadSettingsScript = QtWidgets.QAction(MainWindow)
        self.action_LoadSettingsScript.setObjectName("action_LoadSettingsScript")
        self.action_ResetDisplay = QtWidgets.QAction(MainWindow)
        self.action_ResetDisplay.setObjectName("action_ResetDisplay")
        self.action_SaveDisplay = QtWidgets.QAction(MainWindow)
        self.action_SaveDisplay.setEnabled(True)
        self.action_SaveDisplay.setObjectName("action_SaveDisplay")
        self.action_createOutput = QtWidgets.QAction(MainWindow)
        self.action_createOutput.setObjectName("action_createOutput")
        self.action_createBinaryMasks = QtWidgets.QAction(MainWindow)
        self.action_createBinaryMasks.setObjectName("action_createBinaryMasks")
        self.action_ResetAnalysis = QtWidgets.QAction(MainWindow)
        self.action_ResetAnalysis.setObjectName("action_ResetAnalysis")
        self.action_LoadOneICA = QtWidgets.QAction(MainWindow)
        self.action_LoadOneICA.setObjectName("action_LoadOneICA")
        self.action_LoadOneICN = QtWidgets.QAction(MainWindow)
        self.action_LoadOneICN.setObjectName("action_LoadOneICN")
        self.action_runAnalysis = QtWidgets.QAction(MainWindow)
        self.action_runAnalysis.setObjectName("action_runAnalysis")
        self.action_ShowCrosshairs = QtWidgets.QAction(MainWindow)
        self.action_ShowCrosshairs.setCheckable(True)
        self.action_ShowCrosshairs.setChecked(True)
        self.action_ShowCrosshairs.setObjectName("action_ShowCrosshairs")
        self.action_ShowICAName = QtWidgets.QAction(MainWindow)
        self.action_ShowICAName.setCheckable(True)
        self.action_ShowICAName.setChecked(True)
        self.action_ShowICAName.setObjectName("action_ShowICAName")
        self.action_ShowICNTemplateName = QtWidgets.QAction(MainWindow)
        self.action_ShowICNTemplateName.setCheckable(True)
        self.action_ShowICNTemplateName.setChecked(True)
        self.action_ShowICNTemplateName.setObjectName("action_ShowICNTemplateName")
        self.action_ChangeTextSize = QtWidgets.QAction(MainWindow)
        self.action_ChangeTextSize.setObjectName("action_ChangeTextSize")
        self.action_ShowICNTemplate = QtWidgets.QAction(MainWindow)
        self.action_ShowICNTemplate.setCheckable(True)
        self.action_ShowICNTemplate.setChecked(True)
        self.action_ShowICNTemplate.setObjectName("action_ShowICNTemplate")
        self.action_ShowMappingName = QtWidgets.QAction(MainWindow)
        self.action_ShowMappingName.setCheckable(True)
        self.action_ShowMappingName.setChecked(True)
        self.action_ShowMappingName.setObjectName("action_ShowMappingName")
        self.action_ThreshICAVol = QtWidgets.QAction(MainWindow)
        self.action_ThreshICAVol.setCheckable(True)
        self.action_ThreshICAVol.setObjectName("action_ThreshICAVol")
        self.action_ClearClassifications_all = QtWidgets.QAction(MainWindow)
        self.action_ClearClassifications_all.setObjectName("action_ClearClassifications_all")
        self.action_FindDuplicateICNClassifications = QtWidgets.QAction(MainWindow)
        self.action_FindDuplicateICNClassifications.setObjectName("action_FindDuplicateICNClassifications")
        self.action_ChangeAnatomicalVol = QtWidgets.QAction(MainWindow)
        self.action_ChangeAnatomicalVol.setObjectName("action_ChangeAnatomicalVol")
        self.action_StartCorrelationAnalysis = QtWidgets.QAction(MainWindow)
        self.action_StartCorrelationAnalysis.setObjectName("action_StartCorrelationAnalysis")
        self.action_RunCorrelationAnalysisOffline = QtWidgets.QAction(MainWindow)
        self.action_RunCorrelationAnalysisOffline.setObjectName("action_RunCorrelationAnalysisOffline")
        self.action_correlateOnClick = QtWidgets.QAction(MainWindow)
        self.action_correlateOnClick.setCheckable(True)
        self.action_correlateOnClick.setChecked(True)
        self.action_correlateOnClick.setObjectName("action_correlateOnClick")
        self.action_ClearICAlist_select = QtWidgets.QAction(MainWindow)
        self.action_ClearICAlist_select.setObjectName("action_ClearICAlist_select")
        self.action_ClearICNlist_select = QtWidgets.QAction(MainWindow)
        self.action_ClearICNlist_select.setObjectName("action_ClearICNlist_select")
        self.action_RenameICAlist_select = QtWidgets.QAction(MainWindow)
        self.action_RenameICAlist_select.setObjectName("action_RenameICAlist_select")
        self.action_RenameICNtemplates_select = QtWidgets.QAction(MainWindow)
        self.action_RenameICNtemplates_select.setObjectName("action_RenameICNtemplates_select")
        self.action_FindDuplicateICAClassifications = QtWidgets.QAction(MainWindow)
        self.action_FindDuplicateICAClassifications.setObjectName("action_FindDuplicateICAClassifications")
        self.action_DuplicateICA_select = QtWidgets.QAction(MainWindow)
        self.action_DuplicateICA_select.setObjectName("action_DuplicateICA_select")
        self.action_ClearClassifications_select = QtWidgets.QAction(MainWindow)
        self.action_ClearClassifications_select.setObjectName("action_ClearClassifications_select")
        self.action_RenameClassifications_select = QtWidgets.QAction(MainWindow)
        self.action_RenameClassifications_select.setObjectName("action_RenameClassifications_select")
        self.action_ShowAboutInfo = QtWidgets.QAction(MainWindow)
        self.action_ShowAboutInfo.setObjectName("action_ShowAboutInfo")
        self.action_ShowStepByStepTutorial = QtWidgets.QAction(MainWindow)
        self.action_ShowStepByStepTutorial.setObjectName("action_ShowStepByStepTutorial")
        self.action_LoadICAcomps_on_startup = QtWidgets.QAction(MainWindow)
        self.action_LoadICAcomps_on_startup.setCheckable(True)
        self.action_LoadICAcomps_on_startup.setChecked(True)
        self.action_LoadICAcomps_on_startup.setObjectName("action_LoadICAcomps_on_startup")
        self.action_LoadICNtemplates_on_startup = QtWidgets.QAction(MainWindow)
        self.action_LoadICNtemplates_on_startup.setCheckable(True)
        self.action_LoadICNtemplates_on_startup.setChecked(True)
        self.action_LoadICNtemplates_on_startup.setObjectName("action_LoadICNtemplates_on_startup")
        self.action_ChangeDefaultStructuralVol = QtWidgets.QAction(MainWindow)
        self.action_ChangeDefaultStructuralVol.setObjectName("action_ChangeDefaultStructuralVol")
        self.action_ChangeDefaultOutputDir = QtWidgets.QAction(MainWindow)
        self.action_ChangeDefaultOutputDir.setObjectName("action_ChangeDefaultOutputDir")
        self.action_LoadNoiseTemplates_on_startup = QtWidgets.QAction(MainWindow)
        self.action_LoadNoiseTemplates_on_startup.setCheckable(True)
        self.action_LoadNoiseTemplates_on_startup.setObjectName("action_LoadNoiseTemplates_on_startup")
        self.action_ResetSettings_to_default = QtWidgets.QAction(MainWindow)
        self.action_ResetSettings_to_default.setObjectName("action_ResetSettings_to_default")
        self.action_ChangeDefaultNoiseTemplate_dir = QtWidgets.QAction(MainWindow)
        self.action_ChangeDefaultNoiseTemplate_dir.setObjectName("action_ChangeDefaultNoiseTemplate_dir")
        self.actionChange_other_default_settings = QtWidgets.QAction(MainWindow)
        self.actionChange_other_default_settings.setObjectName("actionChange_other_default_settings")
        self.action_FindProbableClassifications = QtWidgets.QAction(MainWindow)
        self.action_FindProbableClassifications.setObjectName("action_FindProbableClassifications")
        self.action_FindQuestionableClassifications = QtWidgets.QAction(MainWindow)
        self.action_FindQuestionableClassifications.setObjectName("action_FindQuestionableClassifications")
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_LoadAnalysis)
        self.menuFile.addAction(self.action_SaveAnalysis)
        self.menuFile.addAction(self.action_ResetAnalysis)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_correlateOnClick)
        self.menuFile.addAction(self.action_runAnalysis)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_createOutput)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_Quit)
        self.menuEdit.addAction(self.action_LoadSettingsScript)
        self.menuEdit.addAction(self.action_ResetSettings_to_default)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.action_LoadICAcomps_on_startup)
        self.menuEdit.addAction(self.action_LoadICNtemplates_on_startup)
        self.menuEdit.addAction(self.action_LoadNoiseTemplates_on_startup)
        self.menuEdit.addAction(self.action_ChangeDefaultStructuralVol)
        self.menuEdit.addAction(self.actionChange_other_default_settings)
        self.menuDisplay.addAction(self.action_DisplayICAtime)
        self.menuDisplay.addAction(self.action_DisplayICAfreq)
        self.menuDisplay.addAction(self.action_ChangeTR)
        self.menuDisplay.addSeparator()
        self.menuDisplay.addAction(self.action_ChangeAnatomicalVol)
        self.menuDisplay.addAction(self.action_ShowCrosshairs)
        self.menuDisplay.addAction(self.action_ThreshICAVol)
        self.menuDisplay.addAction(self.action_ShowICNTemplate)
        self.menuDisplay.addAction(self.action_ShowMappingName)
        self.menuDisplay.addAction(self.action_ShowICAName)
        self.menuDisplay.addAction(self.action_ShowICNTemplateName)
        self.menuDisplay.addAction(self.action_ChangeTextSize)
        self.menuDisplay.addSeparator()
        self.menuDisplay.addAction(self.action_ResetDisplay)
        self.menuDisplay.addAction(self.action_SaveDisplay)
        self.menuMasks.addAction(self.action_createBinaryMasks)
        self.menuNetworks.addAction(self.action_LoadICAcomps)
        self.menuNetworks.addAction(self.action_RenameICAlist_select)
        self.menuNetworks.addAction(self.action_ClearICAlist_select)
        self.menuNetworks.addAction(self.action_ClearICAlist_all)
        self.menuNetworks.addSeparator()
        self.menuNetworks.addAction(self.action_LoadICNtemplates)
        self.menuNetworks.addAction(self.action_RenameICNtemplates_select)
        self.menuNetworks.addAction(self.action_LoadNoisetemplates)
        self.menuNetworks.addAction(self.action_ClearICNlist_select)
        self.menuNetworks.addAction(self.action_ClearICNlist_all)
        self.menuMappings_2.addAction(self.action_RenameClassifications_select)
        self.menuMappings_2.addSeparator()
        self.menuMappings_2.addAction(self.action_DuplicateICA_select)
        self.menuMappings_2.addAction(self.action_FindDuplicateICAClassifications)
        self.menuMappings_2.addAction(self.action_FindDuplicateICNClassifications)
        self.menuMappings_2.addSeparator()
        self.menuMappings_2.addAction(self.action_FindProbableClassifications)
        self.menuMappings_2.addAction(self.action_FindQuestionableClassifications)
        self.menuMappings_2.addSeparator()
        self.menuMappings_2.addAction(self.action_ClearClassifications_select)
        self.menuMappings_2.addAction(self.action_ClearClassifications_all)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.action_ShowAboutInfo)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.action_ShowStepByStepTutorial)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuNetworks.menuAction())
        self.menubar.addAction(self.menuMappings_2.menuAction())
        self.menubar.addAction(self.menuDisplay.menuAction())
        self.menubar.addAction(self.menuMasks.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ICA to Intrinsic Connectivity Network Classification"))
        self.pushButton_icnload.setText(_translate("MainWindow", "Load ICN templates"))
        self.pushButton_icaload.setText(_translate("MainWindow", "Load ICA components"))
        self.label_6.setText(_translate("MainWindow", "Intrinsic Connectivity Networks"))
        self.label_5.setText(_translate("MainWindow", "< >"))
        self.label_4.setText(_translate("MainWindow", "ICA components"))
        self.pushButton_runAnalysis.setText(_translate("MainWindow", "Run Correlation Analysis"))
        self.label_9.setText(_translate("MainWindow", "Possible Network Classification:"))
        self.label_8.setText(_translate("MainWindow", ">"))
        self.pushButton_addNetwork.setText(_translate("MainWindow", "Set Classification (ICA > ICN)"))
        self.pushButton_rmNetwork.setText(_translate("MainWindow", "Remove Classification"))
        self.pushButton_createOutput.setText(_translate("MainWindow", "Create Output Figure(s) and Table"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Plot Options"))
        self.radioButton_ortho.setText(_translate("MainWindow", "Ortho"))
        self.radioButton_axial.setText(_translate("MainWindow", "Axial"))
        self.radioButton_sagittal.setText(_translate("MainWindow", "Sagittal"))
        self.radioButton_coronal.setText(_translate("MainWindow", "Coronal"))
        self.label.setText(_translate("MainWindow", "Number of Slices"))
        self.pushButton_showOverlap.setText(_translate("MainWindow", "Go To Max. Overlapping (x,y,z)"))
        self.label_Xslice.setText(_translate("MainWindow", "X"))
        self.label_Yslice.setText(_translate("MainWindow", "Y"))
        self.label_Zslice.setText(_translate("MainWindow", "Z"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuDisplay.setTitle(_translate("MainWindow", "Display"))
        self.menuMasks.setTitle(_translate("MainWindow", "Masks"))
        self.menuNetworks.setTitle(_translate("MainWindow", "Networks"))
        self.menuMappings_2.setTitle(_translate("MainWindow", "Classifications"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.action_LoadICAcomps.setText(_translate("MainWindow", "Load ICA components"))
        self.action_ClearICAlist_all.setText(_translate("MainWindow", "Clear all ICA components"))
        self.action_LoadICNtemplates.setText(_translate("MainWindow", "Load ICN templates"))
        self.action_LoadNoisetemplates.setText(_translate("MainWindow", "Load noise templates"))
        self.action_ClearICNlist_all.setText(_translate("MainWindow", "Clear all templates"))
        self.action_Quit.setText(_translate("MainWindow", "Quit"))
        self.action_Quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_DisplayICAtime.setText(_translate("MainWindow", "Display ICA time courses"))
        self.action_DisplayICAfreq.setText(_translate("MainWindow", "Display ICA freq. spectrum"))
        self.action_ChangeTR.setText(_translate("MainWindow", "Change TR"))
        self.action_LoadAnalysis.setText(_translate("MainWindow", "Load analysis"))
        self.action_LoadAnalysis.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.action_SaveAnalysis.setText(_translate("MainWindow", "Save analysis"))
        self.action_SaveAnalysis.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_LoadSettingsScript.setText(_translate("MainWindow", "Load settings configuration script"))
        self.action_ResetDisplay.setText(_translate("MainWindow", "Reset display"))
        self.action_SaveDisplay.setText(_translate("MainWindow", "Save current display"))
        self.action_createOutput.setText(_translate("MainWindow", "Create and Save Output"))
        self.action_createBinaryMasks.setText(_translate("MainWindow", "Create masks from classifications"))
        self.action_ResetAnalysis.setText(_translate("MainWindow", "Reset analysis"))
        self.action_LoadOneICA.setText(_translate("MainWindow", "Load single ICA component"))
        self.action_LoadOneICN.setText(_translate("MainWindow", "Load single ICN template"))
        self.action_runAnalysis.setText(_translate("MainWindow", "Run full correlation analysis"))
        self.action_ShowCrosshairs.setText(_translate("MainWindow", "Show crosshairs"))
        self.action_ShowICAName.setText(_translate("MainWindow", "Show ICA file name"))
        self.action_ShowICNTemplateName.setText(_translate("MainWindow", "Show ICN template name"))
        self.action_ChangeTextSize.setText(_translate("MainWindow", "Change text size"))
        self.action_ShowICNTemplate.setText(_translate("MainWindow", "Show ICN template vol."))
        self.action_ShowMappingName.setText(_translate("MainWindow", "Show ICN classification name"))
        self.action_ThreshICAVol.setText(_translate("MainWindow", "Threshold ICA vol."))
        self.action_ClearClassifications_all.setText(_translate("MainWindow", "Reset all ICA > ICN classifications"))
        self.action_FindDuplicateICNClassifications.setText(_translate("MainWindow", "Find duplicate ICN mappings"))
        self.action_ChangeAnatomicalVol.setText(_translate("MainWindow", "Change sMRI vol."))
        self.action_StartCorrelationAnalysis.setText(_translate("MainWindow", "Start Ongoing Correlation Analysis"))
        self.action_RunCorrelationAnalysisOffline.setText(_translate("MainWindow", "Run Correlation Analysis Offline"))
        self.action_correlateOnClick.setText(_translate("MainWindow", "Correlate IC * ICN pair on click"))
        self.action_correlateOnClick.setIconText(_translate("MainWindow", "Correlate IC & ICN on click"))
        self.action_ClearICAlist_select.setText(_translate("MainWindow", "Clear select ICA components"))
        self.action_ClearICNlist_select.setText(_translate("MainWindow", "Clear select templates"))
        self.action_RenameICAlist_select.setText(_translate("MainWindow", "Rename ICA components"))
        self.action_RenameICNtemplates_select.setText(_translate("MainWindow", "Rename ICN templates"))
        self.action_FindDuplicateICAClassifications.setText(_translate("MainWindow", "Find duplicate ICA classifications"))
        self.action_DuplicateICA_select.setText(_translate("MainWindow", "Duplicate select ICA comps for multiclassification"))
        self.action_ClearClassifications_select.setText(_translate("MainWindow", "Remove select classifications"))
        self.action_RenameClassifications_select.setText(_translate("MainWindow", "Rename select classifications"))
        self.action_ShowAboutInfo.setText(_translate("MainWindow", "About"))
        self.action_ShowStepByStepTutorial.setText(_translate("MainWindow", "Step-by-step tutorial"))
        self.action_LoadICAcomps_on_startup.setText(_translate("MainWindow", "Load default ICA comps on startup"))
        self.action_LoadICNtemplates_on_startup.setText(_translate("MainWindow", "Load default ICN templates on startup"))
        self.action_ChangeDefaultStructuralVol.setText(_translate("MainWindow", "Change default sMRI background"))
        self.action_ChangeDefaultOutputDir.setText(_translate("MainWindow", "Change default output dir."))
        self.action_LoadNoiseTemplates_on_startup.setText(_translate("MainWindow", "Load noise templates on startup"))
        self.action_ResetSettings_to_default.setText(_translate("MainWindow", "Reset settings configuration to defaults"))
        self.action_ChangeDefaultNoiseTemplate_dir.setText(_translate("MainWindow", "Change default noise template dir."))
        self.actionChange_other_default_settings.setText(_translate("MainWindow", "Change other default settings"))
        self.action_FindProbableClassifications.setText(_translate("MainWindow", "Find unmapped probable classifications"))
        self.action_FindQuestionableClassifications.setText(_translate("MainWindow", "Find questionable classifications"))

